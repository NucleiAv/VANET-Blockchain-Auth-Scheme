//
// Generated file, do not edit! Created by opp_msgtool 6.0 from plexe/messages/UpdatePlatoonFormation.msg.
//

#ifndef __UPDATEPLATOONFORMATION_M_H
#define __UPDATEPLATOONFORMATION_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef PLEXE_API
#  if defined(PLEXE_EXPORT)
#    define PLEXE_API  OPP_DLLEXPORT
#  elif defined(PLEXE_IMPORT)
#    define PLEXE_API  OPP_DLLIMPORT
#  else
#    define PLEXE_API
#  endif
#endif

class UpdatePlatoonFormation;
#include "ManeuverMessage_m.h" // import ManeuverMessage

/**
 * Class generated from <tt>plexe/messages/UpdatePlatoonFormation.msg:26</tt> by opp_msgtool.
 * <pre>
 * // Message to inform the all vehicles in the Platoon of the updated formation.
 * // Is similar to a PlatoonBeacon.
 * packet UpdatePlatoonFormation extends ManeuverMessage
 * {
 *     double platoonSpeed;
 *     int platoonLane;
 *     int platoonFormation[];
 * }
 * </pre>
 */
class PLEXE_API UpdatePlatoonFormation : public ::ManeuverMessage
{
  protected:
    double platoonSpeed = 0;
    int platoonLane = 0;
    int *platoonFormation = nullptr;
    size_t platoonFormation_arraysize = 0;

  private:
    void copy(const UpdatePlatoonFormation& other);

  protected:
    bool operator==(const UpdatePlatoonFormation&) = delete;

  public:
    UpdatePlatoonFormation(const char *name=nullptr, short kind=0);
    UpdatePlatoonFormation(const UpdatePlatoonFormation& other);
    virtual ~UpdatePlatoonFormation();
    UpdatePlatoonFormation& operator=(const UpdatePlatoonFormation& other);
    virtual UpdatePlatoonFormation *dup() const override {return new UpdatePlatoonFormation(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getPlatoonSpeed() const;
    virtual void setPlatoonSpeed(double platoonSpeed);

    virtual int getPlatoonLane() const;
    virtual void setPlatoonLane(int platoonLane);

    virtual void setPlatoonFormationArraySize(size_t size);
    virtual size_t getPlatoonFormationArraySize() const;
    virtual int getPlatoonFormation(size_t k) const;
    virtual void setPlatoonFormation(size_t k, int platoonFormation);
    virtual void insertPlatoonFormation(size_t k, int platoonFormation);
    [[deprecated]] void insertPlatoonFormation(int platoonFormation) {appendPlatoonFormation(platoonFormation);}
    virtual void appendPlatoonFormation(int platoonFormation);
    virtual void erasePlatoonFormation(size_t k);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const UpdatePlatoonFormation& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, UpdatePlatoonFormation& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline UpdatePlatoonFormation *fromAnyPtr(any_ptr ptr) { return check_and_cast<UpdatePlatoonFormation*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __UPDATEPLATOONFORMATION_M_H

