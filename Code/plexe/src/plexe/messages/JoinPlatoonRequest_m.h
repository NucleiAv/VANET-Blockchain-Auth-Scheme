//
// Generated file, do not edit! Created by opp_msgtool 6.0 from plexe/messages/JoinPlatoonRequest.msg.
//

#ifndef __JOINPLATOONREQUEST_M_H
#define __JOINPLATOONREQUEST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef PLEXE_API
#  if defined(PLEXE_EXPORT)
#    define PLEXE_API  OPP_DLLEXPORT
#  elif defined(PLEXE_IMPORT)
#    define PLEXE_API  OPP_DLLIMPORT
#  else
#    define PLEXE_API
#  endif
#endif

class JoinPlatoonRequest;
#include "ManeuverMessage_m.h" // import ManeuverMessage

/**
 * Class generated from <tt>plexe/messages/JoinPlatoonRequest.msg:26</tt> by opp_msgtool.
 * <pre>
 * // Request to join a Platoon.
 * // Is sent from a possible joiner to the leader of the Platoon.
 * packet JoinPlatoonRequest extends ManeuverMessage
 * {
 *     // the id of the lane the joiner currently drives on
 *     int currentLaneIndex;
 *     double xPos;
 *     double yPos;
 * }
 * </pre>
 */
class PLEXE_API JoinPlatoonRequest : public ::ManeuverMessage
{
  protected:
    int currentLaneIndex = 0;
    double xPos = 0;
    double yPos = 0;

  private:
    void copy(const JoinPlatoonRequest& other);

  protected:
    bool operator==(const JoinPlatoonRequest&) = delete;

  public:
    JoinPlatoonRequest(const char *name=nullptr, short kind=0);
    JoinPlatoonRequest(const JoinPlatoonRequest& other);
    virtual ~JoinPlatoonRequest();
    JoinPlatoonRequest& operator=(const JoinPlatoonRequest& other);
    virtual JoinPlatoonRequest *dup() const override {return new JoinPlatoonRequest(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getCurrentLaneIndex() const;
    virtual void setCurrentLaneIndex(int currentLaneIndex);

    virtual double getXPos() const;
    virtual void setXPos(double xPos);

    virtual double getYPos() const;
    virtual void setYPos(double yPos);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const JoinPlatoonRequest& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, JoinPlatoonRequest& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline JoinPlatoonRequest *fromAnyPtr(any_ptr ptr) { return check_and_cast<JoinPlatoonRequest*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __JOINPLATOONREQUEST_M_H

