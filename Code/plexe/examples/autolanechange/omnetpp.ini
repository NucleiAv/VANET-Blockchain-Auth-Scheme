[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 7

network = AutoLaneChange

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 120 s

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "vtypeauto=org.car2x.plexe.PlatoonCar vtypehuman=0"
*.manager.moduleName = "vtypeauto=node vtypehuman=0"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.mac1609_4.useAcks = true
*.**.nic.mac1609_4.ackErrorRate = 0.0
*.**.nic.mac1609_4.frameErrorRate = 0.0

*.**.nic.phy80211p.minPowerLevel = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5
**.traffic.rng-1 = 6

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/ring.sumo.cfg"
*.manager.launchConfig = xmldoc("./sumocfg/ring.launchd.xml")

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 8}
**.numberOfCarsPerPlatoon = ${platoonSize = 8}
**.numberOfLanes = ${nLanes = 1}
**.dummyvtype = ${vtype = "vtypeauto"}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.caccSpacing = 5 m
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false

#used controller
**.dummycontroller = ${controller = 0, 1}

#ACC time headway. other controllers ignore this
*.node[*].scenario.accHeadway = 1 s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2} s
*.node[*].scenario.platooningVType = ${vtype}

#average leader speed
*.node[*].scenario.leaderSpeed = 0 kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "SimplePlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = -1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].prot.useControllerAcceleration = true

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "RingTrafficManager"
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = ${vtype}
**.traffic.nCars = ${nCars}
**.traffic.platoonSize = intuniform(3, 8, 5)
**.traffic.nPlatoons = 6
**.traffic.nLanes = 3
**.traffic.platoonInsertTime = 1 s
**.traffic.platoonInsertSpeed = uniform(80 kmph, 120 kmph, 6)
**.traffic.platoonInsertDistance = ${5, 2 ! controller} m
**.traffic.platoonInsertHeadway = ${0, ${ploegH} ! controller} s
**.traffic.platoonLeaderHeadway = ${leaderHeadway} s
**.traffic.controller = ${"CACC", "PLOEG" ! controller}


#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config LaneChange]

repeat = 1
*.manager.command = "sumo-gui"
*.manager.ignoreGuiCommands = false

#use the sinusoidal scenario
*.node[*].scenario_type = "AutoLaneChangeScenario"

sim-time-limit = 400 s

output-vector-file = ${resultdir}/${configname}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${repetition}.sca

[Config LaneChangeNoGui]

extends = LaneChange
*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/LaneChange_${repetition}.vec
output-scalar-file = ${resultdir}/LaneChange_${repetition}.sca
