[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

network = Engine

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 120 s

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "org.car2x.plexe.PlatoonCar"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.mac1609_4.useAcks = true
*.**.nic.mac1609_4.ackErrorRate = 0.0
*.**.nic.mac1609_4.frameErrorRate = 0.0

*.**.nic.phy80211p.minPowerLevel = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/freeway.sumo.cfg"
*.manager.launchConfig = xmldoc("./sumocfg/freeway.launchd.xml")
#location of the vehicles parameters file
*.useLaunchd = ${useLaunchd = false}
*.node[*].scenario.vehicleFile = ${useLaunchd} ? "./vehicles.xml" : "./sumocfg/vehicles.xml"

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 8}
**.numberOfCarsPerPlatoon = ${platoonSize = 8}
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"
*.node[*].helper.nLanes = ${nLanes}
*.node[*].helper.platoonSize = ${platoonSize}
*.node[*].helper.nCars = ${nCars}

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = true

#ACC time headway. other controllers ignore this
*.node[*].scenario.accHeadway = 1 s
*.node[*].scenario.leaderHeadway = 1 s

#average leader speed
*.node[*].scenario.leaderSpeed = 0 kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "SimplePlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].prot.useControllerAcceleration = true

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "PlatoonsTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = 0 kmph
#insert 1 vehicle
**.traffic.nCars = 1
#let 1 car per platoon
**.traffic.platoonSize = 1
#use 1 lane
**.traffic.nLanes = 1
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
**.traffic.platoonInsertDistance = 1 m
**.traffic.platoonInsertHeadway = 1 s
**.traffic.platoonLeaderHeadway = 1 s
#used controller
**.traffic.controller = "ACC"

#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config EngineTest]

repeat = 1
*.manager.command = "sumo-gui"
*.manager.ignoreGuiCommands = false

#use the sinusoidal scenario
*.node[*].scenario_type = "AccelerateAndBrakeScenario"

sim-time-limit = 100 s

#acceleration and deceleration over possibility, to test the model
*.node[*].scenario.acceleration = 20 mpsps
*.node[*].scenario.brakingDeceleration = 20 mpsps
*.node[*].scenario.startAccelerating = 5 s
*.node[*].scenario.startBraking = 75 s
**.dummyvehicle = ${vehicle = 0,1,2}
*.node[*].scenario.vehicleType = ${model = "alfa-147", "audi-r8", "bugatti-veyron" ! vehicle}

output-vector-file = ${resultdir}/${configname}_${vehicle}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${vehicle}_${repetition}.sca

[Config EngineTestNoGui]
extends = EngineTest
*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/EngineTest_${vehicle}_${repetition}.vec
output-scalar-file = ${resultdir}/EngineTest_${vehicle}_${repetition}.sca
