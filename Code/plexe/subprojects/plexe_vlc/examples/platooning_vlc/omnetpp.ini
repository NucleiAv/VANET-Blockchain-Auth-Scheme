[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 9

ned-path = .
network = PlatooningVlc

repeat = 1

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 120 s

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "org.car2x.plexe.subprojects.plexe_vlc.PlatoonCarVlc"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

##########################################################
#            VLC specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
# PhyLayerVlc
*.node[*].nicVlc**.phyVlc.txPower = 10mW    # This is a nominal value, should not be listed as simulatin parameter
*.node[*].nicVlc**.phyVlc.bitrate = 1Mbps

# BasePhyLayer
*.node[*].nicVlc**.phyVlc.usePropagationDelay = true
*.node[*].nicVlc**.phyVlc.noiseFloor = -110dBm
*.node[*].nicVlc**.phyVlc.useNoiseFloor = true
*.node[*].nicVlc**.phyVlc.minPowerLevel = -114dBm

*.node[*].nicVlcHead.phyVlc.antenna = xml("<root><Antenna type=\"HeadlightAntenna\" id=\"HeadlightAntenna\"></Antenna></root>")
*.node[*].nicVlcTail.phyVlc.antenna = xml("<root><Antenna type=\"TaillightAntenna\" id=\"TaillightAntenna\"></Antenna></root>")

*.node[*].nicVlcHead.phyVlc.antennaOffsetX = 2.5 m
*.node[*].nicVlcTail.phyVlc.antennaOffsetX = -2.5 m
*.node[*].nicVlcHead.phyVlc.antennaOffsetZ = 0.6 m
*.node[*].nicVlcTail.phyVlc.antennaOffsetZ = 0.8 m

*.node[*].nicVlc**.phyVlc.analogueModels = xmldoc("config-vlc.xml")
*.node[*].nicVlc**.phyVlc.decider = xmldoc("config-vlc.xml")

# Splitter
*.node[*].splitter.drawHeadHalfAngle = 45deg
*.node[*].splitter.drawTailHalfAngle = 60deg

# LsvLightModel
*.node[*].nicVlcHead.phyVlc.radiationPatternId = "LbSedan1"
# other patterns: LbSedan2, LbSuv1, HbSedan1, HbSedan2
*.node[*].nicVlcTail.phyVlc.radiationPatternId = "DefaultRear"
*.node[*].nicVlc**.phyVlc.photodiodeId = "PDA100A"
*.node[*].nicVlcHead.phyVlc.photodiodeGroundOffsetZ = 0.6 m
*.node[*].nicVlcTail.phyVlc.photodiodeGroundOffsetZ = 0.2 m

## antennaOffsetZ only applies to head and taillights
*.node[*].nicVlc**.phyVlc.interModuleDistance = 1.5 m

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 1.895

##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].unicast.rng-0 = 4
*.node[*].prot.rng-0 = 5
*.node[*].appl.rng-0 = 6
*.node[*].scenario.rng-0 = 7
**.traffic.rng-0 = 8


#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/freeway.sumo.cfg"
*.manager.launchConfig = xmldoc("./sumocfg/freeway.launchd.xml")

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 8}
**.numberOfCarsPerPlatoon = ${platoonSize = 8}
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].scenario.useControllerAcceleration = true
*.node[*].scenario.nLanes = ${nLanes}

#controllers to be tested
**.numericController = ${controller = 1, 2}

#headway for ACCs
**.headway = ${headway = 0.1, 0.1 ! controller}s
*.node[*].scenario.accHeadway = ${headway}s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 100}kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "SimplePlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "VlcRepropagationProtocol"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#set to 0 the packet loss rate for the unicast protocol
*.node[*].unicast.packetLossRate = 0

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "PlatoonsTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${5, 2, ! controller}m
**.traffic.platoonInsertHeadway = ${0, 0.5, ! controller}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s
**.traffic.controller = ${sController = "CACC", "PLOEG" ! controller}


#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config Platooning]
*.manager.command = "sumo-gui"

#use the base scenario
*.node[*].scenario_type = "SimpleScenario"

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

[Config Sinusoidal]
*.manager.command = "sumo-gui"

#use the sinusoidal scenario
*.node[*].scenario_type = "SinusoidalScenario"

#make the leader accelerate and decelerate with a sinusoidal trend. set to 0 for constant speed
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.oscillationAmplitude = 10 kmph
*.node[*].scenario.startOscillating = 5 s

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

[Config Braking]
*.manager.command = "sumo-gui"

#use the braking scenario
*.node[*].scenario_type = "BrakingScenario"

#make the leader decelerate with a certain deceleration
*.node[*].scenario.leaderOscillationFrequency = 0.2 Hz
*.node[*].scenario.brakingDeceleration = 8 mpsps
*.node[*].scenario.startBraking = 5 s

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

[Config PlatooningNoGui]
extends = Platooning

*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Platooning_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/Platooning_${controller}_${headway}_${repetition}.sca


[Config SinusoidalNoGui]
extends = Sinusoidal

*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Sinusoidal_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/Sinusoidal_${controller}_${headway}_${repetition}.sca

[Config BrakingNoGui]
extends = Braking

*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Braking_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/Braking_${controller}_${headway}_${repetition}.sca

